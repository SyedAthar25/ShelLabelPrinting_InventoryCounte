var M=Object.defineProperty;var U=(r,t,e)=>t in r?M(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var u=(r,t,e)=>(U(r,typeof t!="symbol"?t+"":t,e),e);const B=["GP-M322","GP-M421","Gprinter","Printer_","Printer-"];function m(){const r=window;return r&&r.bluetoothSerial?r.bluetoothSerial:null}class N{constructor(){u(this,"deviceAddress",null);u(this,"connected",!1)}matchesPrinterName(t){return t?B.some(e=>t.includes(e)||t.startsWith(e)):!1}async ensureConnected(){const t=m();if(!t)throw new Error("Bluetooth Serial plugin not available");if(this.connected&&this.deviceAddress)return;await new Promise((o,s)=>t.isEnabled(o,s));const e=await new Promise((o,s)=>t.list(o,s));if(!e||e.length===0)throw new Error("No bonded Bluetooth devices");const n=e.find(o=>this.matchesPrinterName(o.name))||e[0],i=n.address||n.id;if(!i)throw new Error("No device address");await new Promise((o,s)=>t.connect(i,o,s)),this.deviceAddress=i,this.connected=!0}async disconnect(){const t=m();t&&(await new Promise(e=>t.disconnect(e,()=>e())),this.connected=!1,this.deviceAddress=null)}isConnected(){return this.connected}async write(t){const e=m();if(!e)throw new Error("Bluetooth Serial plugin not available");(!this.connected||!this.deviceAddress)&&await this.ensureConnected();const n=1024;for(let i=0;i<t.length;i+=n){const o=t.slice(i,Math.min(i+n,t.length));await new Promise((s,a)=>e.write(o.buffer,s,a))}}async printText(t){await this.write(new Uint8Array([27,64]));const e=new TextEncoder;for(const n of t)await this.write(e.encode(n+`
`));await this.write(new Uint8Array([10,10]))}async printImageFromDataUrl(t){const e=await this.loadImage(t),n=document.createElement("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");if(!i)throw new Error("Canvas not supported");i.drawImage(e,0,0,n.width,n.height);const o=i.getImageData(0,0,n.width,n.height),s=200,a=Math.ceil(n.width/8),f=a*n.height,d=new Uint8Array(f);for(let w=0;w<n.height;w++)for(let c=0;c<n.width;c++){const g=(w*n.width+c)*4,p=o.data[g],x=o.data[g+1],C=o.data[g+2],E=(o.data[g+3]===0?255:Math.round(.299*p+.587*x+.114*C))<s?1:0,S=w*a+(c>>3),I=7-(c&7);E&&(d[S]|=1<<I)}const y=0,P=a&255,v=a>>8&255,A=n.height&255,b=n.height>>8&255,h=new Uint8Array([27,64,29,118,48,y,P,v,A,b]),l=new Uint8Array(h.length+d.length+4);l.set(h,0),l.set(d,h.length),l.set(new Uint8Array([10,10,29,86]),h.length+d.length),await this.write(l)}loadImage(t){return new Promise((e,n)=>{const i=new Image;i.onload=()=>e(i),i.onerror=()=>n(new Error("Failed to load image")),i.src=t})}}const L=new N;export{N as BluetoothPrinterClassicService,L as bluetoothPrinterClassicService};
